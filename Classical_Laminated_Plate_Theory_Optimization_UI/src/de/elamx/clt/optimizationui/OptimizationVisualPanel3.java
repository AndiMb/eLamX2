/*
 *  This program developed in Java is based on the netbeans platform and is used
 *  to design and to analyse composite structures by means of analytical and 
 *  numerical methods.
 * 
 *  Further information can be found here:
 *  http://www.elamx.de
 *    
 *  Copyright (C) 2021 Technische Universität Dresden - Andreas Hauffe
 * 
 *  This file is part of eLamX².
 *
 *  eLamX² is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  eLamX² is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with eLamX².  If not, see <http://www.gnu.org/licenses/>.
 */
package de.elamx.clt.optimizationui;

import de.elamx.clt.optimization.Optimizer;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import org.openide.util.Lookup;
import org.openide.util.NbBundle;

public final class OptimizationVisualPanel3 extends JPanel {

    /**
     * Creates new form OptimizationVisualPanel3
     */
    public OptimizationVisualPanel3() {
        initComponents();

        Object selectedItem = null;
        ArrayList<Optimizer> optimizer = new ArrayList<>();
        for (Optimizer optiAlgo : Lookup.getDefault().lookupAll(Optimizer.class)) {
            optimizer.add(optiAlgo);
            if (optiAlgo.getClass().getName().contains("HauffeOptimizer")){
                selectedItem = optiAlgo;
            }
        }
        // Sortieren der Liste nach den Name der Optimierungsalgorithmen
        Collections.sort(optimizer, new Comparator<Optimizer>() {
            @Override
            public int compare(Optimizer o1, Optimizer o2) {
                return o1.getName().compareToIgnoreCase(o2.getName());
            }
        });
        DefaultComboBoxModel<Optimizer> optimizerModel = new DefaultComboBoxModel<>(optimizer.toArray(new Optimizer[optimizer.size()]));
        algorithmComboBox.setModel(optimizerModel);
        algorithmComboBox.setSelectedItem(selectedItem);
    }

    @Override
    public String getName() {
        return NbBundle.getMessage(OptimizationVisualPanel3.class, "OptimizationVisualPanel3.name");
    }
    
    public Optimizer getOptimizer(){
        return (Optimizer)algorithmComboBox.getSelectedItem();
    }
    
    public void setOptimizer(Optimizer optimizer){
        algorithmComboBox.setSelectedItem(optimizer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        algorithmLabel = new javax.swing.JLabel();
        algorithmComboBox = new javax.swing.JComboBox<Optimizer>();

        org.openide.awt.Mnemonics.setLocalizedText(algorithmLabel, org.openide.util.NbBundle.getMessage(OptimizationVisualPanel3.class, "OptimizationVisualPanel3.algorithmLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(algorithmLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(algorithmComboBox, 0, 386, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algorithmLabel)
                    .addComponent(algorithmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Optimizer> algorithmComboBox;
    private javax.swing.JLabel algorithmLabel;
    // End of variables declaration//GEN-END:variables
}
