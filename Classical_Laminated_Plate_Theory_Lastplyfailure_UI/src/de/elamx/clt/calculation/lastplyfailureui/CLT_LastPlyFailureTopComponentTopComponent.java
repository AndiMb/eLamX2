/*
 *  This program developed in Java is based on the netbeans platform and is used
 *  to design and to analyse composite structures by means of analytical and 
 *  numerical methods.
 * 
 *  Further information can be found here:
 *  http://www.elamx.de
 *    
 *  Copyright (C) 2021 Technische Universität Dresden - Andreas Hauffe
 * 
 *  This file is part of eLamX².
 *
 *  eLamX² is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  eLamX² is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with eLamX².  If not, see <http://www.gnu.org/licenses/>.
 */
package de.elamx.clt.calculation.lastplyfailureui;

import de.elamx.clt.*;
import de.elamx.clt.calculation.lastplyfailure.LastPlyFailureInput;
import de.elamx.core.GlobalProperties;
import de.elamx.laminate.Laminat;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.DecimalFormat;
import java.util.HashSet;
import java.util.Set;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.NbBundle;
import org.openide.util.lookup.InstanceContent;
import org.openide.util.lookup.Lookups;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@TopComponent.Description(
        preferredID = "CLT_LastPlyFailureTopComponentTopComponent",
        iconBase = "de/elamx/clt/calculation/lastplyfailure/resources/kcalc.png"
)
public final class CLT_LastPlyFailureTopComponentTopComponent extends TopComponent implements LookupListener, CLTRefreshListener, PropertyChangeListener {

    private final InstanceContent ic = new InstanceContent();

    private final LastPlyFailureModuleData data;
    private final CLT_Laminate clt_lam;
    private final Lookup.Result<LastPlyFailureModuleData> result;
    public final static Set<LastPlyFailureModuleData> uniqueLastPlyFailureData = new HashSet<>();
    
    DecimalFormat df_Forces = GlobalProperties.getDefault().getFormat(GlobalProperties.FORMAT_FORCE);

    public CLT_LastPlyFailureTopComponentTopComponent(LastPlyFailureModuleData data) {
        this.data = data;
        setName(this.data.getName() + " - " + this.data.getLaminat().getName());
        setToolTipText(NbBundle.getMessage(CLT_LastPlyFailureTopComponentTopComponent.class, "HINT_CLT_PressureVesselTopComponent"));
        data.getLaminat().addPropertyChangeListener(this);
        CLT_Laminate tClt_lam = data.getLaminat().getLookup().lookup(CLT_Laminate.class);
        if (tClt_lam == null) {
            clt_lam = new CLT_Laminate(data.getLaminat());
        } else {
            clt_lam = tClt_lam;
        }
        clt_lam.addCLTRefreshListener(this);
        initComponents();
        associateLookup(Lookups.fixed(data, data.getLaminat()));
        /*associateLookup(Lookups.fixed(data, data.getLaminat(), new RawDataExportImpl()));
        table.setMinimumSize(new Dimension(300, 0));
        for (MouseWheelListener mwl : jScrollPane2.getMouseWheelListeners()) {
            jScrollPane2.removeMouseWheelListener(mwl);
        }
        stressRadioButton.setSelected(tabModel.isShowStresses());*/

        result = data.getLaminat().getLookup().lookupResult(LastPlyFailureModuleData.class);
        result.addLookupListener(this);
        data.addPropertyChangeListener(this);
        /*refreshed();
        recalc();

        popupMenu = Utilities.actionsToPopup(Utilities.actionsForPath("eLamXActions/LayerResultContainer").toArray(new Action[0]), lu);

        MouseListener popupListener = new PopupListener();
        // Add the listener to the JTable:
        table.addMouseListener(popupListener);
        // Add the listener specifically to the header:
        table.getTableHeader().addMouseListener(popupListener);
         */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calculationButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nxField = new javax.swing.JFormattedTextField(df_Forces);
        nxField.setValue(data.getLastPlyFailureInput().getLoad().getN_x());
        nxField.addPropertyChangeListener("value", this);
        jLabel2 = new javax.swing.JLabel();
        nyField = new javax.swing.JFormattedTextField(df_Forces);
        nyField.setValue(data.getLastPlyFailureInput().getLoad().getN_y());
        nyField.addPropertyChangeListener("value", this);
        jLabel3 = new javax.swing.JLabel();
        nxyField = new javax.swing.JFormattedTextField(df_Forces);
        nxyField.setValue(data.getLastPlyFailureInput().getLoad().getN_xy());
        nxyField.addPropertyChangeListener("value", this);
        jLabel4 = new javax.swing.JLabel();
        mxyField = new javax.swing.JFormattedTextField(df_Forces);
        mxyField.setValue(data.getLastPlyFailureInput().getLoad().getM_xy());
        mxyField.addPropertyChangeListener("value", this);
        jLabel5 = new javax.swing.JLabel();
        mxField = new javax.swing.JFormattedTextField(df_Forces);
        mxField.setValue(data.getLastPlyFailureInput().getLoad().getM_x());
        mxField.addPropertyChangeListener("value", this);
        jLabel6 = new javax.swing.JLabel();
        myField = new javax.swing.JFormattedTextField(df_Forces);
        myField.setValue(data.getLastPlyFailureInput().getLoad().getM_y());
        myField.addPropertyChangeListener("value", this);

        org.openide.awt.Mnemonics.setLocalizedText(calculationButton, org.openide.util.NbBundle.getMessage(CLT_LastPlyFailureTopComponentTopComponent.class, "CLT_LastPlyFailureTopComponentTopComponent.calculationButton.text")); // NOI18N
        calculationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculationButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(CLT_LastPlyFailureTopComponentTopComponent.class, "CLT_LastPlyFailureTopComponentTopComponent.jPanel1.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(CLT_LastPlyFailureTopComponentTopComponent.class, "CLT_LastPlyFailureTopComponentTopComponent.jLabel1.text")); // NOI18N

        nxField.setColumns(8);
        nxField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(CLT_LastPlyFailureTopComponentTopComponent.class, "CLT_LastPlyFailureTopComponentTopComponent.jLabel2.text")); // NOI18N

        nyField.setColumns(8);
        nyField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(CLT_LastPlyFailureTopComponentTopComponent.class, "CLT_LastPlyFailureTopComponentTopComponent.jLabel3.text")); // NOI18N

        nxyField.setColumns(8);
        nxyField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(CLT_LastPlyFailureTopComponentTopComponent.class, "CLT_LastPlyFailureTopComponentTopComponent.jLabel4.text")); // NOI18N

        mxyField.setColumns(8);
        mxyField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(CLT_LastPlyFailureTopComponentTopComponent.class, "CLT_LastPlyFailureTopComponentTopComponent.jLabel5.text")); // NOI18N

        mxField.setColumns(8);
        mxField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(CLT_LastPlyFailureTopComponentTopComponent.class, "CLT_LastPlyFailureTopComponentTopComponent.jLabel6.text")); // NOI18N

        myField.setColumns(8);
        myField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nxyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mxyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nxyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(myField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(mxyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(calculationButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calculationButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void calculationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculationButtonActionPerformed
        data.getLastPlyFailureInput().removePropertyChangeListener(this);

        CLT_Calculator.determineValuesLastPlyFailure(
                clt_lam,
                data.getLastPlyFailureInput().getLoad(),
                data.getLastPlyFailureInput().getStrain(),
                data.getLastPlyFailureInput().isUseStrains()
        );

        data.getLastPlyFailureInput().addPropertyChangeListener(this);
    }//GEN-LAST:event_calculationButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculationButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JFormattedTextField mxField;
    private javax.swing.JFormattedTextField mxyField;
    private javax.swing.JFormattedTextField myField;
    private javax.swing.JFormattedTextField nxField;
    private javax.swing.JFormattedTextField nxyField;
    private javax.swing.JFormattedTextField nyField;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        data.getLaminat().removePropertyChangeListener(this);
        data.removePropertyChangeListener(this);
        clt_lam.removeCLTRefreshListener(this);
        uniqueLastPlyFailureData.remove(data);
    }

    @Override
    public int getPersistenceType() {
        return TopComponent.PERSISTENCE_NEVER;
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public void resultChanged(LookupEvent ev) {
        if (!result.allInstances().contains(data)) {
            this.close();
        }
    }

    @Override
    public void refreshed() {
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getSource() instanceof Laminat && evt.getPropertyName().equals(Laminat.PROP_NAME)
                || evt.getSource() instanceof LastPlyFailureModuleData && evt.getPropertyName().equals(LastPlyFailureModuleData.PROP_NAME)) {
            setName(this.data.getName() + " - " + this.data.getLaminat().getName());
        }else if (evt.getPropertyName().equals("value")){
            if (evt.getSource() == nxField){
                data.getLastPlyFailureInput().getLoad().setN_x(((Number)nxField.getValue()).doubleValue());
            }else if (evt.getSource() == nyField){
                data.getLastPlyFailureInput().getLoad().setN_y(((Number)nyField.getValue()).doubleValue());
            }else if (evt.getSource() == nxyField){
                data.getLastPlyFailureInput().getLoad().setN_xy(((Number)nxyField.getValue()).doubleValue());
            }else if (evt.getSource() == mxField){
                data.getLastPlyFailureInput().getLoad().setM_x(((Number)mxField.getValue()).doubleValue());
            }else if (evt.getSource() == myField){
                data.getLastPlyFailureInput().getLoad().setM_y(((Number)myField.getValue()).doubleValue());
            }else if (evt.getSource() == mxyField){
                data.getLastPlyFailureInput().getLoad().setM_xy(((Number)mxyField.getValue()).doubleValue());
            }
        }
    }
}
