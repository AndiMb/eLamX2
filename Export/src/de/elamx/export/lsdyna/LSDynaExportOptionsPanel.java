/*
 *  This program developed in Java is based on the netbeans platform and is used
 *  to design and to analyse composite structures by means of analytical and 
 *  numerical methods.
 * 
 *  Further information can be found here:
 *  http://www.elamx.de
 *    
 *  Copyright (C) 2021 Technische Universität Dresden - Andreas Hauffe
 * 
 *  This file is part of eLamX².
 *
 *  eLamX² is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  eLamX² is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with eLamX².  If not, see <http://www.gnu.org/licenses/>.
 */
package de.elamx.export.lsdyna;

import de.elamx.core.GlobalProperties;
import de.elamx.export.Export;
import de.elamx.export.ExportOptions;
import de.elamx.export.ExportOptionsPanel;
import de.elamx.laminate.Laminat;
import java.text.DecimalFormat;
import javax.swing.text.NumberFormatter;
import org.openide.util.NbPreferences;

/**
 *
 * @author Andreas Hauffe
 */
public class LSDynaExportOptionsPanel extends ExportOptionsPanel {
    
    private static final DecimalFormat lengthFormat = GlobalProperties.getDefault().getFormat(GlobalProperties.FORMAT_THICKNESS);
    private static final DecimalFormat timeFormat = GlobalProperties.getDefault().getFormat(GlobalProperties.FORMAT_DOUBLE);
    private static final DecimalFormat massFormat = GlobalProperties.getDefault().getFormat(GlobalProperties.FORMAT_DOUBLE);

    private Laminat laminate;
    
    /**
     * Creates new form LSDynaExportOptionsPanel
     */
    @SuppressWarnings("this-escape")
    public LSDynaExportOptionsPanel() {
        initComponents();
    }
    
    public LSDynaExportOptionsPanel(Laminat laminate) {
        this();
        this.laminate = laminate;
        hygrothermalCheckBox.setSelected(NbPreferences.forModule(LSDynaExportOptionsPanel.class).getBoolean("LSDynaExportOptionsPanel.hygrothermnal", false));
        strengthCheckBox.setSelected(NbPreferences.forModule(LSDynaExportOptionsPanel.class).getBoolean("LSDynaExportOptionsPanel.strength", false));
        massField.setValue(NbPreferences.forModule(LSDynaExportOptionsPanel.class).getDouble("LSDynaExportOptionsPanel.mass", 1.0));
        lengthField.setValue(NbPreferences.forModule(LSDynaExportOptionsPanel.class).getDouble("LSDynaExportOptionsPanel.length", 1.0));
        timeField.setValue(NbPreferences.forModule(LSDynaExportOptionsPanel.class).getDouble("LSDynaExportOptionsPanel.time", 1.0));
        mat22RadioButton.setSelected(NbPreferences.forModule(LSDynaExportOptionsPanel.class).getBoolean("LSDynaExportOptionsPanel.mat22", false));
        mat54RadioButton.setSelected(NbPreferences.forModule(LSDynaExportOptionsPanel.class).getBoolean("LSDynaExportOptionsPanel.mat54", false));
        mat55RadioButton.setSelected(NbPreferences.forModule(LSDynaExportOptionsPanel.class).getBoolean("LSDynaExportOptionsPanel.mat55", false));
        mat58RadioButton.setSelected(NbPreferences.forModule(LSDynaExportOptionsPanel.class).getBoolean("LSDynaExportOptionsPanel.mat58", true));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        mat22RadioButton = new javax.swing.JRadioButton();
        mat54RadioButton = new javax.swing.JRadioButton();
        mat55RadioButton = new javax.swing.JRadioButton();
        mat58RadioButton = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        hygrothermalCheckBox = new javax.swing.JCheckBox();
        strengthCheckBox = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lengthField = new javax.swing.JFormattedTextField();
        timeField = new javax.swing.JFormattedTextField();
        massField = new javax.swing.JFormattedTextField();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(LSDynaExportOptionsPanel.class, "typePanel.title"))); // NOI18N

        buttonGroup1.add(mat22RadioButton);
        org.openide.awt.Mnemonics.setLocalizedText(mat22RadioButton, org.openide.util.NbBundle.getMessage(LSDynaExportOptionsPanel.class, "LSDynaExportOptionsPanel.mat22RadioButton.text")); // NOI18N

        buttonGroup1.add(mat54RadioButton);
        org.openide.awt.Mnemonics.setLocalizedText(mat54RadioButton, org.openide.util.NbBundle.getMessage(LSDynaExportOptionsPanel.class, "LSDynaExportOptionsPanel.mat54RadioButton.text")); // NOI18N

        buttonGroup1.add(mat55RadioButton);
        org.openide.awt.Mnemonics.setLocalizedText(mat55RadioButton, org.openide.util.NbBundle.getMessage(LSDynaExportOptionsPanel.class, "LSDynaExportOptionsPanel.mat55RadioButton.text")); // NOI18N

        buttonGroup1.add(mat58RadioButton);
        mat58RadioButton.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(mat58RadioButton, org.openide.util.NbBundle.getMessage(LSDynaExportOptionsPanel.class, "LSDynaExportOptionsPanel.mat58RadioButton.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mat22RadioButton)
                    .addComponent(mat54RadioButton)
                    .addComponent(mat55RadioButton)
                    .addComponent(mat58RadioButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mat22RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mat54RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mat55RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mat58RadioButton)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(LSDynaExportOptionsPanel.class, "additionalExportPanel.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(hygrothermalCheckBox, org.openide.util.NbBundle.getMessage(LSDynaExportOptionsPanel.class, "LSDynaExportOptionsPanel.hygrothermalCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(strengthCheckBox, org.openide.util.NbBundle.getMessage(LSDynaExportOptionsPanel.class, "LSDynaExportOptionsPanel.strengthCheckBox.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hygrothermalCheckBox)
                    .addComponent(strengthCheckBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hygrothermalCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(strengthCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(LSDynaExportOptionsPanel.class, "unitPanel.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(LSDynaExportOptionsPanel.class, "LSDynaExportOptionsPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(LSDynaExportOptionsPanel.class, "LSDynaExportOptionsPanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(LSDynaExportOptionsPanel.class, "LSDynaExportOptionsPanel.jLabel3.text")); // NOI18N

        lengthField.setColumns(8);
        lengthField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new NumberFormatter(lengthFormat)));
        lengthField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);

        timeField.setColumns(8);
        timeField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new NumberFormatter(timeFormat)));
        timeField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);

        massField.setColumns(8);
        massField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new NumberFormatter(massFormat)));
        massField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lengthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(massField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(massField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lengthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox hygrothermalCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JFormattedTextField lengthField;
    private javax.swing.JFormattedTextField massField;
    private javax.swing.JRadioButton mat22RadioButton;
    private javax.swing.JRadioButton mat54RadioButton;
    private javax.swing.JRadioButton mat55RadioButton;
    private javax.swing.JRadioButton mat58RadioButton;
    private javax.swing.JCheckBox strengthCheckBox;
    private javax.swing.JFormattedTextField timeField;
    // End of variables declaration//GEN-END:variables

    @Override
    public Export<? extends ExportOptions> getExport() {
        LSDynaExport export;
        double ms = ((Number)massField.getValue()).doubleValue();
        double ls = ((Number)lengthField.getValue()).doubleValue();
        double ts = ((Number)timeField.getValue()).doubleValue();
        if (mat22RadioButton.isSelected()){
            export = new LS_Dyna_Mat22_Writer(laminate, ms, ls, ts);
        }else if (mat54RadioButton.isSelected()){
            export = new LS_Dyna_Mat54_55_Writer(laminate, ms, ls, ts, "54.0");
        }else if (mat55RadioButton.isSelected()){
            export = new LS_Dyna_Mat54_55_Writer(laminate, ms, ls, ts, "55.0");
        }else{
            export = new LS_Dyna_Mat58_Writer(laminate, ms, ls, ts);
        }
        LSDynaExportOptions options = export.getOptions();
        options.setHygrothermal(hygrothermalCheckBox.isSelected());
        options.setStrength(strengthCheckBox.isSelected());
        NbPreferences.forModule(LSDynaExportOptionsPanel.class).putBoolean("LSDynaExportOptionsPanel.hygrothermnal", hygrothermalCheckBox.isSelected());
        NbPreferences.forModule(LSDynaExportOptionsPanel.class).putBoolean("LSDynaExportOptionsPanel.strength", strengthCheckBox.isSelected());
        NbPreferences.forModule(LSDynaExportOptionsPanel.class).putDouble("LSDynaExportOptionsPanel.mass", ms);
        NbPreferences.forModule(LSDynaExportOptionsPanel.class).putDouble("LSDynaExportOptionsPanel.length", ls);
        NbPreferences.forModule(LSDynaExportOptionsPanel.class).putDouble("LSDynaExportOptionsPanel.time", ts);
        NbPreferences.forModule(LSDynaExportOptionsPanel.class).putBoolean("LSDynaExportOptionsPanel.mat22", mat22RadioButton.isSelected());
        NbPreferences.forModule(LSDynaExportOptionsPanel.class).putBoolean("LSDynaExportOptionsPanel.mat54", mat54RadioButton.isSelected());
        NbPreferences.forModule(LSDynaExportOptionsPanel.class).putBoolean("LSDynaExportOptionsPanel.mat55", mat55RadioButton.isSelected());
        NbPreferences.forModule(LSDynaExportOptionsPanel.class).putBoolean("LSDynaExportOptionsPanel.mat58", mat58RadioButton.isSelected());
        return export;
    }
}
